name: gitops-mas-core
type: gitops
description: >-
  Module to populate a gitops repo with the resources to provision Maximo
  Application Suite Core
tags:
  - gitops
  - maximo application suite
  - core
versions:
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    providers:
      - name: gitops
        source: cloud-native-toolkit/gitops
      - name: clis
        source: cloud-native-toolkit/clis
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: catalog
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-gitops-toolkit-catalog.git
            version: '>= 1.0.0'
      - id: storage_manager
        optional: true
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-util-storage-class-manager.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ''
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: catalog_name
        type: string
        description: >-
          The name of the catalog from which the masauto-operator can be
          installed
        default: ecosystem-engineering-catalog
        moduleRef:
          id: catalog
          output: name
      - name: entitlement_key
        type: string
        description: >-
          The entitlement key used to access the Maximo Application Suite images
          in the container registry. Visit
          https://myibm.ibm.com/products-services/containerlibrary to get the
          key
        sensitive: true
      - name: mas_channel
        type: string
        description: >-
          The name of the channel where the container images should be pulled
          (e.g. 8.8.x)
        default: 8.8.x
      - name: mas_instance_id
        type: string
        description: The identifier for the MAS instance
        default: inst1
      - name: mas_workspace_id
        type: string
        description: >-
          The identifier for the workspace that will be created within the MAS
          instance
        default: masdev
      - name: mas_workspace_name
        type: string
        description: The name of the workspace that will be created within the MAS instance
        default: MAS Development
      - name: mongodb_storage_class
        type: string
        description: >-
          The storage class that should be used to provision storage for the
          MongoDB instance
        moduleRef:
          id: storage_manager
          output: block_storage_class
      - name: uds_storage_class
        type: string
        description: >-
          The storage class that should be used to provision storage for the UDS
          instance
        moduleRef:
          id: storage_manager
          output: block_storage_class
      - name: uds_contact_email
        type: string
        description: The email address of the contact person for UDS
      - name: uds_contact_first_name
        type: string
        description: The first name of the contact person for UDS
      - name: uds_contact_last_name
        type: string
        description: The last name of the contact person for UDS
      - name: host_id
        type: string
        description: >-
          The host id for the MAS core instance that is included in the license.
          If none is provided the host id will be generated.
        default: ''
      - name: license_key
        type: string
        description: >-
          The contents of the license key that should be applied to the new
          instance. The value can be provided directly or via the
          'license_key_file' variable. If none is provided the license will need
          to be applied manually after install.
        default: ''
      - name: license_key_file
        type: string
        description: >-
          The name of the file containing the license key that should be applied
          to the new instance. The value can be provided in a file or directly
          via the 'license_key' variable. If none is provided the license will
          need to be applied manually after install.
        default: ''
    version: v1.1.0
    outputs:
      - name: name
        description: The name of the module
      - name: branch
        description: The branch where the module config has been placed
      - name: namespace
        description: The namespace where the module will be deployed
      - name: server_name
        description: The server where the module will be deployed
      - name: layer
        description: The layer where the module is deployed
      - name: type
        description: The type of module where the module is deployed
      - name: entitlement_secret_name
        description: The name of the secret that contains the entitlement_key
      - name: mas_instance_id
        description: The identifier of the MAS instance that was created
      - name: mas_workspace_id
        description: The identifier of the MAS workspace that was created
  - platforms:
      - kubernetes
      - ocp3
      - ocp4
    providers:
      - name: gitops
        source: cloud-native-toolkit/gitops
      - name: clis
        source: cloud-native-toolkit/clis
    dependencies:
      - id: gitops
        refs:
          - source: github.com/cloud-native-toolkit/terraform-tools-gitops.git
            version: '>= 1.1.0'
      - id: catalog
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-gitops-toolkit-catalog.git
            version: '>= 1.0.0'
      - id: storage_manager
        optional: true
        refs:
          - source: >-
              github.com/cloud-native-toolkit/terraform-util-storage-class-manager.git
            version: '>= 1.0.0'
    variables:
      - name: gitops_config
        type: |-
          object({
              boostrap = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
              })
              infrastructure = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              services = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
              applications = object({
                argocd-config = object({
                  project = string
                  repo = string
                  url = string
                  path = string
                })
                payload = object({
                  repo = string
                  url = string
                  path = string
                })
              })
            })
        description: Config information regarding the gitops repo structure
        moduleRef:
          id: gitops
          output: gitops_config
      - name: git_credentials
        type: |-
          list(object({
              repo = string
              url = string
              username = string
              token = string
            }))
        description: The credentials for the gitops repo(s)
        sensitive: true
        moduleRef:
          id: gitops
          output: git_credentials
      - name: kubeseal_cert
        type: string
        description: The certificate/public key used to encrypt the sealed secrets
        default: ''
        moduleRef:
          id: gitops
          output: sealed_secrets_cert
      - name: server_name
        type: string
        description: The name of the server
        default: default
        moduleRef:
          id: gitops
          output: server_name
      - name: catalog_name
        type: string
        description: >-
          The name of the catalog from which the masauto-operator can be
          installed
        default: ecosystem-engineering-catalog
        moduleRef:
          id: catalog
          output: name
      - name: entitlement_key
        type: string
        description: >-
          The entitlement key used to access the Maximo Application Suite images
          in the container registry. Visit
          https://myibm.ibm.com/products-services/containerlibrary to get the
          key
        sensitive: true
      - name: mas_channel
        type: string
        description: >-
          The name of the channel where the container images should be pulled
          (e.g. 8.8.x)
        default: 8.8.x
      - name: mas_instance_id
        type: string
        description: The identifier for the MAS instance
        default: inst1
      - name: mas_workspace_id
        type: string
        description: >-
          The identifier for the workspace that will be created within the MAS
          instance
        default: masdev
      - name: mas_workspace_name
        type: string
        description: The name of the workspace that will be created within the MAS instance
        default: MAS Development
      - name: mongodb_storage_class
        type: string
        description: >-
          The storage class that should be used to provision storage for the
          MongoDB instance
        moduleRef:
          id: storage_manager
          output: block_storage_class
      - name: uds_storage_class
        type: string
        description: >-
          The storage class that should be used to provision storage for the UDS
          instance
        moduleRef:
          id: storage_manager
          output: block_storage_class
      - name: uds_contact_email
        type: string
        description: The email address of the contact person for UDS
      - name: uds_contact_first_name
        type: string
        description: The first name of the contact person for UDS
      - name: uds_contact_last_name
        type: string
        description: The last name of the contact person for UDS
    version: v1.0.0
    outputs:
      - name: name
        description: The name of the module
      - name: branch
        description: The branch where the module config has been placed
      - name: namespace
        description: The namespace where the module will be deployed
      - name: server_name
        description: The server where the module will be deployed
      - name: layer
        description: The layer where the module is deployed
      - name: type
        description: The type of module where the module is deployed
      - name: entitlement_secret_name
        description: The name of the secret that contains the entitlement_key
      - name: mas_instance_id
        description: The identifier of the MAS instance that was created
      - name: mas_workspace_id
        description: The identifier of the MAS workspace that was created
id: github.com/cloud-native-toolkit/terraform-gitops-mas-core
